{"ast":null,"code":"var _jsxFileName = \"E:\\\\coforge technical\\\\flight-management-system\\\\flight-management-frontend\\\\src\\\\components\\\\FlightBooking.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport BookingConfirmation from './BookingConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightBooking = () => {\n  _s();\n  const [flightId, setFlightId] = useState('');\n  const [seatNumber, setSeatNumber] = useState('');\n  const [bookingConfirmed, setBookingConfirmed] = useState(false);\n  const handleBooking = () => {\n    axios.post('/api/bookings/book', {\n      flightId,\n      seatNumber,\n      userId: 1\n    }) // User ID should be dynamically retrieved\n    .then(response => {\n      setBookingConfirmed(true);\n    }).catch(error => {\n      console.error('Error booking flight', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: flightId,\n      onChange: e => setFlightId(e.target.value),\n      placeholder: \"Flight ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: seatNumber,\n      onChange: e => setSeatNumber(e.target.value),\n      placeholder: \"Seat Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBooking,\n      children: \"Book Flight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), bookingConfirmed && /*#__PURE__*/_jsxDEV(BookingConfirmation, {\n      flightId: flightId,\n      seatNumber: seatNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(FlightBooking, \"gO+ZTgw6PQwh1ql2RQ64esRJN30=\");\n_c = FlightBooking;\nexport default FlightBooking;\nvar _c;\n$RefreshReg$(_c, \"FlightBooking\");","map":{"version":3,"names":["React","useState","axios","BookingConfirmation","jsxDEV","_jsxDEV","FlightBooking","_s","flightId","setFlightId","seatNumber","setSeatNumber","bookingConfirmed","setBookingConfirmed","handleBooking","post","userId","then","response","catch","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/coforge technical/flight-management-system/flight-management-frontend/src/components/FlightBooking.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport BookingConfirmation from './BookingConfirmation';\r\n\r\nconst FlightBooking: React.FC = () => {\r\n    const [flightId, setFlightId] = useState('');\r\n    const [seatNumber, setSeatNumber] = useState('');\r\n    const [bookingConfirmed, setBookingConfirmed] = useState(false);\r\n\r\n    const handleBooking = () => {\r\n        axios.post('/api/bookings/book', { flightId, seatNumber, userId: 1 })  // User ID should be dynamically retrieved\r\n            .then(response => {\r\n                setBookingConfirmed(true);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error booking flight', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={flightId} onChange={(e) => setFlightId(e.target.value)} placeholder=\"Flight ID\" />\r\n            <input type=\"text\" value={seatNumber} onChange={(e) => setSeatNumber(e.target.value)} placeholder=\"Seat Number\" />\r\n            <button onClick={handleBooking}>Book Flight</button>\r\n            {bookingConfirmed && <BookingConfirmation flightId={flightId} seatNumber={seatNumber} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FlightBooking;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMa,aAAa,GAAGA,CAAA,KAAM;IACxBZ,KAAK,CAACa,IAAI,CAAC,oBAAoB,EAAE;MAAEP,QAAQ;MAAEE,UAAU;MAAEM,MAAM,EAAE;IAAE,CAAC,CAAC,CAAE;IAAA,CAClEC,IAAI,CAACC,QAAQ,IAAI;MACdL,mBAAmB,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC;EAED,oBACIf,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEhB,QAAS;MAACiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5G3B,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEd,UAAW;MAACe,QAAQ,EAAGC,CAAC,IAAKf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClH3B,OAAA;MAAQ4B,OAAO,EAAEnB,aAAc;MAAAQ,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnDpB,gBAAgB,iBAAIP,OAAA,CAACF,mBAAmB;MAACK,QAAQ,EAAEA,QAAS;MAACE,UAAU,EAAEA;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEd,CAAC;AAACzB,EAAA,CAvBID,aAAuB;AAAA4B,EAAA,GAAvB5B,aAAuB;AAyB7B,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}